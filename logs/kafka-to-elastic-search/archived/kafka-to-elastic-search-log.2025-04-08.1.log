2025-04-08 20:37:08 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5737150941709734169], partition [2], offset [3289]
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5737150941709734169], partition [2], offset [3289]
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5737150941709734169], partition [2], offset [3289]
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5737150941709734169], partition [2], offset [3289]
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5737150941709734169], partition [2], offset [3289]
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5737150941709734169], partition [2], offset [3289]
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5737150941709734169], partition [2], offset [3289]
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5737150941709734169], partition [2], offset [3289]
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:08 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:09 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5737150941709734169], partition [2], offset [3289]
2025-04-08 20:37:09 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:09 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:09 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:09 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5737150941709734169], partition [2], offset [3289]
2025-04-08 20:37:09 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:09 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:09 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:09 [twitterTopicListener-2-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-2@3289
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2557348051172623055], partition [1], offset [3364]
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2557348051172623055], partition [1], offset [3364]
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2557348051172623055], partition [1], offset [3364]
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2557348051172623055], partition [1], offset [3364]
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2557348051172623055], partition [1], offset [3364]
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2557348051172623055], partition [1], offset [3364]
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2557348051172623055], partition [1], offset [3364]
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2557348051172623055], partition [1], offset [3364]
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:12 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2557348051172623055], partition [1], offset [3364]
2025-04-08 20:37:12 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:12 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:12 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:12 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2557348051172623055], partition [1], offset [3364]
2025-04-08 20:37:12 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:12 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:12 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:12 [twitterTopicListener-1-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-1@3364
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3280803781686287698], partition [0], offset [3337]
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3280803781686287698], partition [0], offset [3337]
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3280803781686287698], partition [0], offset [3337]
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3280803781686287698], partition [0], offset [3337]
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3280803781686287698], partition [0], offset [3337]
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3280803781686287698], partition [0], offset [3337]
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3280803781686287698], partition [0], offset [3337]
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3280803781686287698], partition [0], offset [3337]
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:14 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:15 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3280803781686287698], partition [0], offset [3337]
2025-04-08 20:37:15 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:15 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:15 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:15 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3280803781686287698], partition [0], offset [3337]
2025-04-08 20:37:15 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:15 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:15 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:15 [twitterTopicListener-0-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-0@3337
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [1295249210670741353], partition [1], offset [3365]
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [1295249210670741353], partition [1], offset [3365]
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [1295249210670741353], partition [1], offset [3365]
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [1295249210670741353], partition [1], offset [3365]
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [1295249210670741353], partition [1], offset [3365]
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [1295249210670741353], partition [1], offset [3365]
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [1295249210670741353], partition [1], offset [3365]
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [1295249210670741353], partition [1], offset [3365]
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:18 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [1295249210670741353], partition [1], offset [3365]
2025-04-08 20:37:18 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:18 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:18 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:18 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [1295249210670741353], partition [1], offset [3365]
2025-04-08 20:37:18 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:18 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:18 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:18 [twitterTopicListener-1-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-1@3365
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3922197027585923528], partition [0], offset [3338]
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3922197027585923528], partition [0], offset [3338]
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3922197027585923528], partition [0], offset [3338]
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3922197027585923528], partition [0], offset [3338]
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3922197027585923528], partition [0], offset [3338]
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3922197027585923528], partition [0], offset [3338]
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3922197027585923528], partition [0], offset [3338]
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3922197027585923528], partition [0], offset [3338]
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:20 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:21 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3922197027585923528], partition [0], offset [3338]
2025-04-08 20:37:21 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:21 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:21 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:21 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3922197027585923528], partition [0], offset [3338]
2025-04-08 20:37:21 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:21 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:21 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:21 [twitterTopicListener-0-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-0@3338
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4979999962534626023], partition [2], offset [3290]
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4979999962534626023], partition [2], offset [3290]
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4979999962534626023], partition [2], offset [3290]
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4979999962534626023], partition [2], offset [3290]
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4979999962534626023], partition [2], offset [3290]
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4979999962534626023], partition [2], offset [3290]
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4979999962534626023], partition [2], offset [3290]
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4979999962534626023], partition [2], offset [3290]
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:23 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:24 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4979999962534626023], partition [2], offset [3290]
2025-04-08 20:37:24 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:24 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:24 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:24 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4979999962534626023], partition [2], offset [3290]
2025-04-08 20:37:24 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:24 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:24 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:24 [twitterTopicListener-2-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-2@3290
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:37:26 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4792829640909376586], partition [2], offset [3291]
2025-04-08 20:37:26 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:26 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:26 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:26 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4792829640909376586], partition [2], offset [3291]
2025-04-08 20:37:26 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:26 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:26 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:26 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4792829640909376586], partition [2], offset [3291]
2025-04-08 20:37:26 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:26 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:26 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:26 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4792829640909376586], partition [2], offset [3291]
2025-04-08 20:37:26 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:26 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:26 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:26 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4792829640909376586], partition [2], offset [3291]
2025-04-08 20:37:26 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:26 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:26 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:26 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4792829640909376586], partition [2], offset [3291]
2025-04-08 20:37:26 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:26 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:26 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:27 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4792829640909376586], partition [2], offset [3291]
2025-04-08 20:37:27 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:27 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:27 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:27 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4792829640909376586], partition [2], offset [3291]
2025-04-08 20:37:27 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:27 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:27 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:27 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4792829640909376586], partition [2], offset [3291]
2025-04-08 20:37:27 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:27 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:27 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:27 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4792829640909376586], partition [2], offset [3291]
2025-04-08 20:37:27 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:27 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:27 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:27 [twitterTopicListener-2-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-2@3291
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6095072760819939316], partition [1], offset [3366]
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6095072760819939316], partition [1], offset [3366]
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6095072760819939316], partition [1], offset [3366]
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6095072760819939316], partition [1], offset [3366]
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6095072760819939316], partition [1], offset [3366]
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6095072760819939316], partition [1], offset [3366]
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6095072760819939316], partition [1], offset [3366]
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:29 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:30 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6095072760819939316], partition [1], offset [3366]
2025-04-08 20:37:30 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:30 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:30 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:30 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6095072760819939316], partition [1], offset [3366]
2025-04-08 20:37:30 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:30 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:30 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:30 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6095072760819939316], partition [1], offset [3366]
2025-04-08 20:37:30 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:30 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:30 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:30 [twitterTopicListener-1-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-1@3366
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4630628475646364777], partition [1], offset [3367]
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4630628475646364777], partition [1], offset [3367]
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4630628475646364777], partition [1], offset [3367]
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4630628475646364777], partition [1], offset [3367]
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4630628475646364777], partition [1], offset [3367]
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4630628475646364777], partition [1], offset [3367]
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4630628475646364777], partition [1], offset [3367]
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:32 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:33 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4630628475646364777], partition [1], offset [3367]
2025-04-08 20:37:33 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:33 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:33 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:33 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4630628475646364777], partition [1], offset [3367]
2025-04-08 20:37:33 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:33 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:33 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:33 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4630628475646364777], partition [1], offset [3367]
2025-04-08 20:37:33 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:33 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:33 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:33 [twitterTopicListener-1-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-1@3367
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5768845272399772163], partition [2], offset [3292]
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5768845272399772163], partition [2], offset [3292]
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5768845272399772163], partition [2], offset [3292]
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5768845272399772163], partition [2], offset [3292]
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5768845272399772163], partition [2], offset [3292]
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5768845272399772163], partition [2], offset [3292]
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5768845272399772163], partition [2], offset [3292]
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:35 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:36 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5768845272399772163], partition [2], offset [3292]
2025-04-08 20:37:36 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:36 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:36 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:36 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5768845272399772163], partition [2], offset [3292]
2025-04-08 20:37:36 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:36 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:36 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:36 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5768845272399772163], partition [2], offset [3292]
2025-04-08 20:37:36 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:36 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:36 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:36 [twitterTopicListener-2-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-2@3292
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7912021988234149569], partition [0], offset [3339]
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7912021988234149569], partition [0], offset [3339]
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7912021988234149569], partition [0], offset [3339]
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7912021988234149569], partition [0], offset [3339]
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7912021988234149569], partition [0], offset [3339]
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7912021988234149569], partition [0], offset [3339]
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7912021988234149569], partition [0], offset [3339]
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:38 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:39 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7912021988234149569], partition [0], offset [3339]
2025-04-08 20:37:39 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:39 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:39 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:39 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7912021988234149569], partition [0], offset [3339]
2025-04-08 20:37:39 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:39 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:39 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:39 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7912021988234149569], partition [0], offset [3339]
2025-04-08 20:37:39 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:39 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:39 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:39 [twitterTopicListener-0-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-0@3339
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5828294746097762242], partition [0], offset [3340]
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5828294746097762242], partition [0], offset [3340]
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5828294746097762242], partition [0], offset [3340]
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5828294746097762242], partition [0], offset [3340]
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5828294746097762242], partition [0], offset [3340]
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5828294746097762242], partition [0], offset [3340]
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5828294746097762242], partition [0], offset [3340]
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:41 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:42 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5828294746097762242], partition [0], offset [3340]
2025-04-08 20:37:42 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:42 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:42 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:42 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5828294746097762242], partition [0], offset [3340]
2025-04-08 20:37:42 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:42 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:42 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:42 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5828294746097762242], partition [0], offset [3340]
2025-04-08 20:37:42 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:42 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:42 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:42 [twitterTopicListener-0-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-0@3340
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2820939919341270875], partition [2], offset [3293]
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2820939919341270875], partition [2], offset [3293]
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2820939919341270875], partition [2], offset [3293]
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2820939919341270875], partition [2], offset [3293]
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2820939919341270875], partition [2], offset [3293]
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2820939919341270875], partition [2], offset [3293]
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2820939919341270875], partition [2], offset [3293]
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:44 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:45 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2820939919341270875], partition [2], offset [3293]
2025-04-08 20:37:45 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:45 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:45 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:45 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2820939919341270875], partition [2], offset [3293]
2025-04-08 20:37:45 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:45 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:45 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:45 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2820939919341270875], partition [2], offset [3293]
2025-04-08 20:37:45 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:45 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:45 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:45 [twitterTopicListener-2-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-2@3293
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4354086061300971788], partition [0], offset [3341]
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4354086061300971788], partition [0], offset [3341]
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4354086061300971788], partition [0], offset [3341]
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4354086061300971788], partition [0], offset [3341]
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4354086061300971788], partition [0], offset [3341]
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4354086061300971788], partition [0], offset [3341]
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4354086061300971788], partition [0], offset [3341]
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:47 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:48 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4354086061300971788], partition [0], offset [3341]
2025-04-08 20:37:48 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:48 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:48 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:48 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4354086061300971788], partition [0], offset [3341]
2025-04-08 20:37:48 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:48 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:48 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:48 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4354086061300971788], partition [0], offset [3341]
2025-04-08 20:37:48 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:48 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:48 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:48 [twitterTopicListener-0-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-0@3341
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3610953717257358793], partition [2], offset [3294]
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3610953717257358793], partition [2], offset [3294]
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3610953717257358793], partition [2], offset [3294]
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3610953717257358793], partition [2], offset [3294]
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3610953717257358793], partition [2], offset [3294]
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3610953717257358793], partition [2], offset [3294]
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3610953717257358793], partition [2], offset [3294]
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:50 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:51 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3610953717257358793], partition [2], offset [3294]
2025-04-08 20:37:51 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:51 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:51 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:51 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3610953717257358793], partition [2], offset [3294]
2025-04-08 20:37:51 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:51 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:51 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:51 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3610953717257358793], partition [2], offset [3294]
2025-04-08 20:37:51 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:51 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:51 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:51 [twitterTopicListener-2-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-2@3294
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4705261053553248673], partition [1], offset [3368]
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4705261053553248673], partition [1], offset [3368]
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4705261053553248673], partition [1], offset [3368]
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4705261053553248673], partition [1], offset [3368]
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4705261053553248673], partition [1], offset [3368]
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4705261053553248673], partition [1], offset [3368]
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4705261053553248673], partition [1], offset [3368]
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:53 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:54 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4705261053553248673], partition [1], offset [3368]
2025-04-08 20:37:54 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:54 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:54 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:54 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4705261053553248673], partition [1], offset [3368]
2025-04-08 20:37:54 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:54 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:54 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:54 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [4705261053553248673], partition [1], offset [3368]
2025-04-08 20:37:54 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:54 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:54 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:54 [twitterTopicListener-1-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-1@3368
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:37:56 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6485905372547623237], partition [2], offset [3295]
2025-04-08 20:37:56 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:56 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:56 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:56 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6485905372547623237], partition [2], offset [3295]
2025-04-08 20:37:56 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:56 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:56 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:56 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6485905372547623237], partition [2], offset [3295]
2025-04-08 20:37:56 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:56 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:56 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:56 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6485905372547623237], partition [2], offset [3295]
2025-04-08 20:37:56 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:56 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:56 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:56 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6485905372547623237], partition [2], offset [3295]
2025-04-08 20:37:56 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:56 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:56 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:56 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6485905372547623237], partition [2], offset [3295]
2025-04-08 20:37:56 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:56 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:56 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:57 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6485905372547623237], partition [2], offset [3295]
2025-04-08 20:37:57 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:57 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:57 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:57 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6485905372547623237], partition [2], offset [3295]
2025-04-08 20:37:57 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:57 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:57 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:57 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6485905372547623237], partition [2], offset [3295]
2025-04-08 20:37:57 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:57 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:57 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:57 [twitterTopicListener-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6485905372547623237], partition [2], offset [3295]
2025-04-08 20:37:57 [twitterTopicListener-2-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:57 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:57 [twitterTopicListener-2-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:57 [twitterTopicListener-2-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-2@3295
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:37:59 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [820869999901317453], partition [1], offset [3369]
2025-04-08 20:37:59 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:59 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:59 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:59 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [820869999901317453], partition [1], offset [3369]
2025-04-08 20:37:59 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:59 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:59 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:59 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [820869999901317453], partition [1], offset [3369]
2025-04-08 20:37:59 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:59 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:59 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:59 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [820869999901317453], partition [1], offset [3369]
2025-04-08 20:37:59 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:59 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:59 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:59 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [820869999901317453], partition [1], offset [3369]
2025-04-08 20:37:59 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:59 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:59 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:37:59 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [820869999901317453], partition [1], offset [3369]
2025-04-08 20:37:59 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:37:59 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:37:59 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:00 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [820869999901317453], partition [1], offset [3369]
2025-04-08 20:38:00 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:00 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:00 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:00 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [820869999901317453], partition [1], offset [3369]
2025-04-08 20:38:00 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:00 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:00 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:00 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [820869999901317453], partition [1], offset [3369]
2025-04-08 20:38:00 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:00 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:00 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:00 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [820869999901317453], partition [1], offset [3369]
2025-04-08 20:38:00 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:00 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:00 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:00 [twitterTopicListener-1-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-1@3369
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:38:02 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2048410192198571936], partition [1], offset [3370]
2025-04-08 20:38:02 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:02 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:02 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:02 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2048410192198571936], partition [1], offset [3370]
2025-04-08 20:38:02 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:02 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:02 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:02 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2048410192198571936], partition [1], offset [3370]
2025-04-08 20:38:02 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:02 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:02 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:02 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2048410192198571936], partition [1], offset [3370]
2025-04-08 20:38:02 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:02 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:02 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:02 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2048410192198571936], partition [1], offset [3370]
2025-04-08 20:38:02 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:02 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:02 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:02 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2048410192198571936], partition [1], offset [3370]
2025-04-08 20:38:02 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:02 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:02 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:03 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2048410192198571936], partition [1], offset [3370]
2025-04-08 20:38:03 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:03 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:03 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:03 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2048410192198571936], partition [1], offset [3370]
2025-04-08 20:38:03 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:03 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:03 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:03 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2048410192198571936], partition [1], offset [3370]
2025-04-08 20:38:03 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:03 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:03 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:03 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [2048410192198571936], partition [1], offset [3370]
2025-04-08 20:38:03 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:03 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:03 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:03 [twitterTopicListener-1-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-1@3370
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:38:05 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3613788142830191332], partition [0], offset [3342]
2025-04-08 20:38:05 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:05 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:05 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:05 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3613788142830191332], partition [0], offset [3342]
2025-04-08 20:38:05 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:05 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:05 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:05 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3613788142830191332], partition [0], offset [3342]
2025-04-08 20:38:05 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:05 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:05 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:05 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3613788142830191332], partition [0], offset [3342]
2025-04-08 20:38:05 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:05 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:05 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:05 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3613788142830191332], partition [0], offset [3342]
2025-04-08 20:38:05 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:05 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:05 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:05 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3613788142830191332], partition [0], offset [3342]
2025-04-08 20:38:05 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:05 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:05 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:06 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3613788142830191332], partition [0], offset [3342]
2025-04-08 20:38:06 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:06 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:06 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:06 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3613788142830191332], partition [0], offset [3342]
2025-04-08 20:38:06 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:06 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:06 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:06 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3613788142830191332], partition [0], offset [3342]
2025-04-08 20:38:06 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:06 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:06 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:06 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [3613788142830191332], partition [0], offset [3342]
2025-04-08 20:38:06 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:06 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:06 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:06 [twitterTopicListener-0-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-0@3342
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:38:08 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7621298634465484011], partition [1], offset [3371]
2025-04-08 20:38:08 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:08 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:08 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:08 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7621298634465484011], partition [1], offset [3371]
2025-04-08 20:38:08 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:08 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:08 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:08 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7621298634465484011], partition [1], offset [3371]
2025-04-08 20:38:08 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:08 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:08 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:08 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7621298634465484011], partition [1], offset [3371]
2025-04-08 20:38:08 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:08 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:08 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:08 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7621298634465484011], partition [1], offset [3371]
2025-04-08 20:38:08 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:08 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:08 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:08 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7621298634465484011], partition [1], offset [3371]
2025-04-08 20:38:08 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:08 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:08 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:09 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7621298634465484011], partition [1], offset [3371]
2025-04-08 20:38:09 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:09 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:09 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:09 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7621298634465484011], partition [1], offset [3371]
2025-04-08 20:38:09 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:09 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:09 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:09 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7621298634465484011], partition [1], offset [3371]
2025-04-08 20:38:09 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:09 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:09 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:09 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7621298634465484011], partition [1], offset [3371]
2025-04-08 20:38:09 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:09 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:09 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:09 [twitterTopicListener-1-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-1@3371
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:38:11 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7844070634243644055], partition [1], offset [3372]
2025-04-08 20:38:11 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:11 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7844070634243644055], partition [1], offset [3372]
2025-04-08 20:38:11 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:11 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7844070634243644055], partition [1], offset [3372]
2025-04-08 20:38:11 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:11 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7844070634243644055], partition [1], offset [3372]
2025-04-08 20:38:11 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:11 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7844070634243644055], partition [1], offset [3372]
2025-04-08 20:38:11 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:11 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7844070634243644055], partition [1], offset [3372]
2025-04-08 20:38:11 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:11 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:12 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7844070634243644055], partition [1], offset [3372]
2025-04-08 20:38:12 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:12 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:12 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:12 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7844070634243644055], partition [1], offset [3372]
2025-04-08 20:38:12 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:12 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:12 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:12 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7844070634243644055], partition [1], offset [3372]
2025-04-08 20:38:12 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:12 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:12 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:12 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7844070634243644055], partition [1], offset [3372]
2025-04-08 20:38:12 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:12 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:12 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:12 [twitterTopicListener-1-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-1@3372
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:38:14 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [9151878215383133272], partition [1], offset [3373]
2025-04-08 20:38:14 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:14 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:14 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:14 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [9151878215383133272], partition [1], offset [3373]
2025-04-08 20:38:14 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:14 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:14 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:14 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [9151878215383133272], partition [1], offset [3373]
2025-04-08 20:38:14 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:14 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:14 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:14 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [9151878215383133272], partition [1], offset [3373]
2025-04-08 20:38:14 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:14 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:14 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:14 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [9151878215383133272], partition [1], offset [3373]
2025-04-08 20:38:14 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:14 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:14 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:14 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [9151878215383133272], partition [1], offset [3373]
2025-04-08 20:38:14 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:14 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:14 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:15 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [9151878215383133272], partition [1], offset [3373]
2025-04-08 20:38:15 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:15 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:15 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:15 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [9151878215383133272], partition [1], offset [3373]
2025-04-08 20:38:15 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:15 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:15 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:15 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [9151878215383133272], partition [1], offset [3373]
2025-04-08 20:38:15 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:15 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:15 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:15 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [9151878215383133272], partition [1], offset [3373]
2025-04-08 20:38:15 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:15 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:15 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:15 [twitterTopicListener-1-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-1@3373
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:38:17 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [199901573618049371], partition [1], offset [3374]
2025-04-08 20:38:17 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:17 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [199901573618049371], partition [1], offset [3374]
2025-04-08 20:38:17 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:17 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [199901573618049371], partition [1], offset [3374]
2025-04-08 20:38:17 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:17 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [199901573618049371], partition [1], offset [3374]
2025-04-08 20:38:17 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:17 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [199901573618049371], partition [1], offset [3374]
2025-04-08 20:38:17 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:17 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [199901573618049371], partition [1], offset [3374]
2025-04-08 20:38:17 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:17 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:18 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [199901573618049371], partition [1], offset [3374]
2025-04-08 20:38:18 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:18 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:18 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:18 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [199901573618049371], partition [1], offset [3374]
2025-04-08 20:38:18 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:18 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:18 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:18 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [199901573618049371], partition [1], offset [3374]
2025-04-08 20:38:18 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:18 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:18 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:18 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [199901573618049371], partition [1], offset [3374]
2025-04-08 20:38:18 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:18 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:18 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:18 [twitterTopicListener-1-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-1@3374
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:38:20 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5292656210423107411], partition [1], offset [3375]
2025-04-08 20:38:20 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:20 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:20 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:20 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5292656210423107411], partition [1], offset [3375]
2025-04-08 20:38:20 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:20 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:20 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:20 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5292656210423107411], partition [1], offset [3375]
2025-04-08 20:38:20 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:20 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:20 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:20 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5292656210423107411], partition [1], offset [3375]
2025-04-08 20:38:20 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:20 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:20 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:20 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5292656210423107411], partition [1], offset [3375]
2025-04-08 20:38:20 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:20 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:20 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:20 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5292656210423107411], partition [1], offset [3375]
2025-04-08 20:38:20 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:20 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:20 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:21 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5292656210423107411], partition [1], offset [3375]
2025-04-08 20:38:21 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:21 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:21 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:21 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5292656210423107411], partition [1], offset [3375]
2025-04-08 20:38:21 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:21 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:21 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:21 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5292656210423107411], partition [1], offset [3375]
2025-04-08 20:38:21 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:21 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:21 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:21 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [5292656210423107411], partition [1], offset [3375]
2025-04-08 20:38:21 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:21 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:21 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:21 [twitterTopicListener-1-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-1@3375
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:38:23 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6500659379270943923], partition [0], offset [3343]
2025-04-08 20:38:23 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:23 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:23 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:23 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6500659379270943923], partition [0], offset [3343]
2025-04-08 20:38:23 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:23 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:23 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:23 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6500659379270943923], partition [0], offset [3343]
2025-04-08 20:38:23 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:23 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:23 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:23 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6500659379270943923], partition [0], offset [3343]
2025-04-08 20:38:23 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:23 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:23 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:23 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6500659379270943923], partition [0], offset [3343]
2025-04-08 20:38:23 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:23 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:23 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:23 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6500659379270943923], partition [0], offset [3343]
2025-04-08 20:38:23 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:23 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:23 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:24 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6500659379270943923], partition [0], offset [3343]
2025-04-08 20:38:24 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:24 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:24 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:24 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6500659379270943923], partition [0], offset [3343]
2025-04-08 20:38:24 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:24 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:24 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:24 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6500659379270943923], partition [0], offset [3343]
2025-04-08 20:38:24 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:24 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:24 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:24 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [6500659379270943923], partition [0], offset [3343]
2025-04-08 20:38:24 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:24 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:24 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:24 [twitterTopicListener-0-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-0@3343
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:38:26 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7438454088529224508], partition [0], offset [3344]
2025-04-08 20:38:26 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:26 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:26 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:26 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7438454088529224508], partition [0], offset [3344]
2025-04-08 20:38:26 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:26 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:26 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:26 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7438454088529224508], partition [0], offset [3344]
2025-04-08 20:38:26 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:26 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:26 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:26 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7438454088529224508], partition [0], offset [3344]
2025-04-08 20:38:26 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:26 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:26 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:26 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7438454088529224508], partition [0], offset [3344]
2025-04-08 20:38:26 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:26 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:26 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:26 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7438454088529224508], partition [0], offset [3344]
2025-04-08 20:38:26 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:26 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:26 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:27 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7438454088529224508], partition [0], offset [3344]
2025-04-08 20:38:27 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:27 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:27 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:27 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7438454088529224508], partition [0], offset [3344]
2025-04-08 20:38:27 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:27 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:27 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:27 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7438454088529224508], partition [0], offset [3344]
2025-04-08 20:38:27 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:27 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:27 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:27 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [7438454088529224508], partition [0], offset [3344]
2025-04-08 20:38:27 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:27 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:27 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:27 [twitterTopicListener-0-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-0@3344
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:38:29 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [953928823495656044], partition [0], offset [3345]
2025-04-08 20:38:29 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:29 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:29 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:29 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [953928823495656044], partition [0], offset [3345]
2025-04-08 20:38:29 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:29 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:29 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:29 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [953928823495656044], partition [0], offset [3345]
2025-04-08 20:38:29 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:29 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:29 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:29 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [953928823495656044], partition [0], offset [3345]
2025-04-08 20:38:29 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:29 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:29 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:29 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [953928823495656044], partition [0], offset [3345]
2025-04-08 20:38:29 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:29 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:29 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:29 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [953928823495656044], partition [0], offset [3345]
2025-04-08 20:38:29 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:29 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:29 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:30 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [953928823495656044], partition [0], offset [3345]
2025-04-08 20:38:30 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:30 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:30 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:30 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [953928823495656044], partition [0], offset [3345]
2025-04-08 20:38:30 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:30 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:30 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:30 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [953928823495656044], partition [0], offset [3345]
2025-04-08 20:38:30 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:30 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:30 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:30 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [953928823495656044], partition [0], offset [3345]
2025-04-08 20:38:30 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:30 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:30 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:30 [twitterTopicListener-0-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-0@3345
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:38:32 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [1315924949057951667], partition [0], offset [3346]
2025-04-08 20:38:32 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:32 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:32 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:32 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [1315924949057951667], partition [0], offset [3346]
2025-04-08 20:38:32 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:32 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:32 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:32 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [1315924949057951667], partition [0], offset [3346]
2025-04-08 20:38:32 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:32 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:32 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:32 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [1315924949057951667], partition [0], offset [3346]
2025-04-08 20:38:32 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:32 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:32 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:32 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [1315924949057951667], partition [0], offset [3346]
2025-04-08 20:38:32 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:32 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:32 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:32 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [1315924949057951667], partition [0], offset [3346]
2025-04-08 20:38:32 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:32 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:32 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:33 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [1315924949057951667], partition [0], offset [3346]
2025-04-08 20:38:33 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:33 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:33 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:33 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [1315924949057951667], partition [0], offset [3346]
2025-04-08 20:38:33 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:33 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:33 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:33 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [1315924949057951667], partition [0], offset [3346]
2025-04-08 20:38:33 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:33 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:33 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:33 [twitterTopicListener-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [1315924949057951667], partition [0], offset [3346]
2025-04-08 20:38:33 [twitterTopicListener-0-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:33 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:33 [twitterTopicListener-0-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:33 [twitterTopicListener-0-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-0@3346
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:38:35 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [696257533205778495], partition [1], offset [3376]
2025-04-08 20:38:35 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:35 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:35 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:2304), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2193), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:35 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [696257533205778495], partition [1], offset [3376]
2025-04-08 20:38:35 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:35 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:35 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:35 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [696257533205778495], partition [1], offset [3376]
2025-04-08 20:38:35 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:35 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:35 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:35 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [696257533205778495], partition [1], offset [3376]
2025-04-08 20:38:35 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:35 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:35 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:35 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [696257533205778495], partition [1], offset [3376]
2025-04-08 20:38:35 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:35 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:35 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [696257533205778495], partition [1], offset [3376]
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [696257533205778495], partition [1], offset [3376]
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [696257533205778495], partition [1], offset [3376]
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [696257533205778495], partition [1], offset [3376]
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - number of messages: 1, keys [696257533205778495], partition [1], offset [3376]
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] INFO  c.m.d.e.i.c.s.i.ElasticIndexClientImpl - Elasticsearch Client Configuration ElasticIndexClientImpl, host http://localhost:9200, connect timeout 5000, socket timeout 30000
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - EL1007E: Property or field 'elasticConfigData' cannot be found on null
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] ERROR c.m.d.e.i.c.s.i.ElasticIndexClientImpl - [org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112), org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100), org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60), org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96), org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119), org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343), org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501), org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328), com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40), com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72), java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103), java.base/java.lang.reflect.Method.invoke(Method.java:580), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169), org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45), org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119), org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413), org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167), org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412), org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143), org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152), org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195), org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166), org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157), org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426), org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296), java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848), java.base/java.lang.Thread.run(Thread.java:1575)]
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] ERROR o.s.k.l.FallbackBatchErrorHandler - Records discarded: twitter-topic-1@3376
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservice.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2400)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:2367)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$invokeBatchErrorHandler$42(KafkaMessageListenerContainer.java:2412)
	at org.springframework.kafka.listener.ErrorHandlingUtils.retryBatch(ErrorHandlingUtils.java:143)
	at org.springframework.kafka.listener.FallbackBatchErrorHandler.handleBatch(FallbackBatchErrorHandler.java:152)
	at org.springframework.kafka.listener.FailedBatchProcessor.fallback(FailedBatchProcessor.java:195)
	at org.springframework.kafka.listener.FailedBatchProcessor.handle(FailedBatchProcessor.java:166)
	at org.springframework.kafka.listener.FailedBatchProcessor.doHandle(FailedBatchProcessor.java:157)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleBatch(DefaultErrorHandler.java:176)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:2410)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:2210)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:2103)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2082)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1848)
	at java.base/java.lang.Thread.run(Thread.java:1575)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
		at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'elasticConfigData' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:225)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:112)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:100)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueRef(CompoundExpression.java:60)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:96)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:361)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.resolve(SimpleElasticsearchPersistentEntity.java:343)
	at org.springframework.data.elasticsearch.core.mapping.SimpleElasticsearchPersistentEntity.getIndexCoordinates(SimpleElasticsearchPersistentEntity.java:138)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.getIndexCoordinatesFor(AbstractElasticsearchTemplate.java:501)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.bulkIndex(AbstractElasticsearchTemplate.java:328)
	at com.microservice.demo.elastic.index.client.services.impl.ElasticIndexClientImpl.save(ElasticIndexClientImpl.java:40)
	at com.microservice.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:72)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:413)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:167)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:59)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:2386)
	... 17 common frames omitted
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Revoke previously assigned partitions twitter-topic-1
2025-04-08 20:38:36 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Revoke previously assigned partitions twitter-topic-2
2025-04-08 20:38:36 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Revoke previously assigned partitions twitter-topic-0
2025-04-08 20:38:36 [twitterTopicListener-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitterTopicListener: partitions revoked: [twitter-topic-0]
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitterTopicListener: partitions revoked: [twitter-topic-1]
2025-04-08 20:38:36 [twitterTopicListener-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitterTopicListener: partitions revoked: [twitter-topic-2]
2025-04-08 20:38:36 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Member consumer-twitterTopicListener-3-3cae2f5d-51a3-4dc4-8176-2dfaba29d339 sending LeaveGroup request to coordinator localhost:39092 (id: 2147483644 rack: null) due to the consumer unsubscribed from all topics
2025-04-08 20:38:36 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Member consumer-twitterTopicListener-1-2fff2c35-52e2-41f2-83ee-0db444bb5e51 sending LeaveGroup request to coordinator localhost:39092 (id: 2147483644 rack: null) due to the consumer unsubscribed from all topics
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Member consumer-twitterTopicListener-2-3e94c1ff-25f7-4211-81c5-7c394c3479bf sending LeaveGroup request to coordinator localhost:39092 (id: 2147483644 rack: null) due to the consumer unsubscribed from all topics
2025-04-08 20:38:36 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-04-08 20:38:36 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-04-08 20:38:36 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Request joining group due to: consumer pro-actively leaving the group
2025-04-08 20:38:36 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Request joining group due to: consumer pro-actively leaving the group
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Request joining group due to: consumer pro-actively leaving the group
2025-04-08 20:38:36 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Unsubscribed all topics or patterns and assigned partitions
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Unsubscribed all topics or patterns and assigned partitions
2025-04-08 20:38:36 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Unsubscribed all topics or patterns and assigned partitions
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-04-08 20:38:36 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-04-08 20:38:36 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-2, groupId=twitterTopicListener] Request joining group due to: consumer pro-actively leaving the group
2025-04-08 20:38:36 [twitterTopicListener-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-1, groupId=twitterTopicListener] Request joining group due to: consumer pro-actively leaving the group
2025-04-08 20:38:36 [twitterTopicListener-2-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-twitterTopicListener-3, groupId=twitterTopicListener] Request joining group due to: consumer pro-actively leaving the group
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-04-08 20:38:36 [twitterTopicListener-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-04-08 20:38:36 [twitterTopicListener-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-04-08 20:38:36 [twitterTopicListener-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-04-08 20:38:36 [twitterTopicListener-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-twitterTopicListener-2 unregistered
2025-04-08 20:38:36 [twitterTopicListener-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-twitterTopicListener-1 unregistered
2025-04-08 20:38:36 [twitterTopicListener-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitterTopicListener: Consumer stopped
2025-04-08 20:38:36 [twitterTopicListener-1-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitterTopicListener: Consumer stopped
2025-04-08 20:38:36 [twitterTopicListener-2-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-04-08 20:38:36 [twitterTopicListener-2-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-04-08 20:38:36 [twitterTopicListener-2-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-04-08 20:38:36 [twitterTopicListener-2-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-04-08 20:38:36 [twitterTopicListener-2-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-twitterTopicListener-3 unregistered
2025-04-08 20:38:36 [twitterTopicListener-2-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - twitterTopicListener: Consumer stopped
2025-04-08 20:38:38 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2025-04-08 20:38:38 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-04-08 20:38:38 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-04-08 20:38:38 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
